name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest # Use a fresh Ubuntu VM for each job

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Action to check out your repository code

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3 # Required for building multi-platform images

    - name: Log in to Docker Hub (or other registry)
      # This is crucial for pushing your built images
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }} # Stored as GitHub Secret
        password: ${{ secrets.DOCKER_PASSWORD }} # Stored as GitHub Secret

    - name: Build and push backend image
      id: build_backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend # Path to your backend Dockerfile context
        file: ./backend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/accessibility-analyzer-backend:latest # Tag your image
        cache-from: type=gha # Use GitHub Actions cache for faster builds
        cache-to: type=gha,mode=max

    - name: Build and push frontend image
      id: build_frontend
      uses: docker/build-push-action@v5
      with:
        context: ./accessibility-analyzer # Path to your frontend Dockerfile context
        file: ./accessibility-analyzer/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/accessibility-analyzer-frontend:latest # Tag your image
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy (Simulated - Replace with actual deployment commands)
      # This step depends on where you want to deploy.
      # For now, it's a placeholder. We'll revisit actual deployment.
      run: |
        echo "--- Deployment Placeholder ---"
        echo "Successfully built and pushed Docker images to Docker Hub."
        echo "Next, you would add commands here to deploy these images to your cloud provider (e.g., AWS, GCP, Azure, DigitalOcean)."
        echo "These commands would use specific cloud SDKs or SSH to a server."
        echo "Ensure your cloud environment also has access to MongoDB Atlas and sets JWT_SECRET, MONGODB_URI correctly as environment variables."
      env:
        # Pass secrets for deployment (if they were used here)
         